function [assignments,...
    unassignedTracks,...
    unassignedDetections]...
    =get_trajectory_assignment(...
        tracks,...
        list_component,...
        KF_distance_threshold)
    
    nTracks = length(tracks);
    nDetections = length(list_component);

    % Compute the cost of assigning each detection to each track.
    %cost = zeros(nTracks, nDetections);
    cost = ones(nTracks, nDetections)*inf;

    for i = 1:nTracks
        for j = 1:nDetections
            cost(i,j) = (tracks(i).x-list_component(j).x)^2 +...
                        min ((tracks(i).y-list_component(j).y)^2,...
                        (1080-abs(tracks(i).y-list_component(j).y))^2);
        end
    end
    % Solve the assignment problem.
    costOfNonAssignment = KF_distance_threshold; % this is maximum distance.

    [assignments, unassignedTracks, unassignedDetections] = ...
        assignDetectionsToTracks(cost, costOfNonAssignment);
end